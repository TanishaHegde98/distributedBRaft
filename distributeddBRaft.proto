// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_package = "io.grpc.examples";

package distributeddBRaft;

service DistributeddBRaft {
  rpc Get (ReadReq) returns (Response) {}
  rpc Put (WriteReq) returns (Response) {}
}


message ReadReq {
  string key = 1;
}

message WriteReq {
  string key = 1;
  string value = 2;
}

message Response {
  int32 return_code = 1;
  int32 error_code = 2;
  //TODO: change to string
  int64 current_leader = 3;
  int32 primary = 4;
  string value = 5;
}

//Raft Interface

service RaftAPI{
  rpc AppendEntriesRPC(AppendEntriesRequest) returns(AppendEntriesResponse);
  rpc RequestVoteRPC(RequestVoteRequest) returns(RequestVoteResponse);
}

message AppendEntriesRequest{
  int64 curr_term = 1;
  int64 leader_id = 2 ;
  int64 follower_log_idx = 3;
  int64 follower_log_term = 4;
  int64 leader_commit = 5;
  repeated Entry entries = 6;
}

message AppendEntriesResponse{
  int64 term = 1;
  bool success = 2;
}

message RequestVoteRequest{
  int64 term = 1;
  int64 candidate_id = 2;
  int64 last_log_idx = 3;
  int64 last_log_term = 4;
}

message RequestVoteResponse {
  int64 term = 1;
  bool voted = 2;
}

message Entry {
    int64 term = 1;
    //TODO: rename it to string key
    int64 address = 2;
    string data = 3; //possible issue..
}